security:
    encoders:
        FOS\UserBundle\Model\UserInterface: bcrypt
    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        fos_userbundle:
            id: fos_user.user_provider.username_email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            form_login:
                login_path: fos_user_security_login #votre route pour la connexion
                check_path: fos_user_security_check
                provider: fos_userbundle
            logout:
                path: fos_user_security_logout #votre route pour la deconnexion
                target: fos_user_security_login
            anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profile, roles: denied }
        - { path: ^/profile_edit, roles: denied }
        - { path: ^/routeconnexion$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/routeinscription, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }
        - { path: ^/social$, role: ROLE_USER }
        - { path: ^/social/info/, role: ROLE_USER }
        - { path: ^/social/user/profil$, role: ROLE_USER }
        - { path: ^/rencontre$, role: ROLE_USER }
        - { path: ^/social/user/profil, role: ROLE_USER }
        
